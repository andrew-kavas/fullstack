events {}

http {
  http2 on;

  server_tokens off;

  map $http_upgrade $connection_upgrade {
    '' close;
    default upgrade;
  }

  proxy_http_version 1.1;
  proxy_set_header Connection $connection_upgrade;
  proxy_set_header Host $host;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Real-IP $remote_addr;

  # ssl_certificate /etc/ssl/private/fullchain.pem;
  # ssl_certificate_key /etc/ssl/private/privkey.pem;

  proxy_read_timeout 24h;

  # proxy_pass directives are passed hosts via a $proxy_pass_host variable to
  # allow nginx to start up before the hosts are actually available. Putting the
  # hosts directly in the proxy_pass directive will fail start up unless all
  # hosts are available. A resolver is required to use variables in proxy_pass
  # directives, so use the docker internal DNS IP here.
  resolver 127.0.0.11;

  server {
    return 301 https://$host$request_uri;
  }
}